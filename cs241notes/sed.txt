SED: Stream operator:

    cat <file> | sed '' --> Make changes but not saved to file
    sed ' ' <file> --> Display changes only
    sed -i ' ' <file>   --> Make and save changes in file
        (Without -i, changes not saved)

    sed 's/<pattern1>/<pattern2>/'  --> Replace first instance of <pattern1> with <pattern2> in each line
        -   sed 's/<pattern1>/<pattern2>/g'  --> Replace all(global) instance of <pattern1> with <pattern2> in each line

    Patterns: 
        - ^<pattern1> -->  Begin with pattern1 in starting of line
        - <pattern1>$ -->  End with pattern1
        - pattern1 can be [a-z],[0-9]
        - [a-z][A-Z] --> Lowercase followed by capital letter
        - [A-z] --> All characters
imp     - s/[0-9]/(&)/g --> Replace every <i> with <(i)>
imp     - s/[0-9][0-9]*/(&)/g --> Replace every single or double digit number with brackets around the number
	-s/(!{4})[^!]/(\1)/g' msg.txt  //exactly 4 exclamations
	-[^!]---> not having exclamation

imp     eg. thr* --> Looks for words with 'th' followed by any number of 'r' (0-infinity)


sed 's/\bpublic\b/private/g' QuizProgram.java  // Replaces 'public' with 'private' only if
            it appears on both boundaries of a word, i.e. appears as an independent word

sed 's/\bpublic/private/g' QuizProgram.java  // Replaces 'public' with 'private' only if
                                            it appears on starting of a word

sed 's/public\b/private/g' QuizProgram.java  // Replaces 'public' with 'private' only if
                                            it appears on ending of a word

sed 's/\<public\>/private/g' QuizProgram.java  // Replaces 'public' with 'private' only if
            it appears on both boundaries of a word, i.e. appears as an independent word

sed 's/!!*/./g' msg.txt  // Replaces multiple consecutive instances of '!' with '.'

sed -E 's/!{1,}/./g' msg.txt  // Replaces multiple consecutive instances of '!' with '.'

sed -E 's/(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ([0-9]{2}), ([0-9]{4})/\2 \1 \3/g' date.txt
    // Changes the date format from May 12, 2010 to 12 May 2010

sed -E 's/([A-Z][a-z]{2}) ([0-9]{2}), ([0-9]{4})/\2 \1 \3/g' date.txt  // Changes the date
                                                format from May 12, 2010 to 12 May 2010

sed '/This/d' hello.txt  // Deletes the lines which contain 'This' as pattern

sed -n '/10.5/,/10.3/p' comm_ind_wi_day3_second_ings.txt  // Prints the data block starting
                                                from pattern '10.5' till pattern '10.3'

sed -n '/10.5/,/10.3/!p' comm_ind_wi_day3_second_ings.txt  // Excludes the data block
                                                    starting from '10.5' to '10.3' stops after printing line with 10.3 otherwise doesnt stop 

sed '5q;d' comm_ind_wi_day3_second_ings.txt  // Quits the scanning on 5th line and prints
                                            it while deleting the rest of data

sed '9,11 s/Ashwin/Jadeja/' comm_ind_wi_day3_second_ings.txt  // Replaces 'Ashwin' with
                                                        'Jadeja' from line numbers 9 to 11

sed -n '9,$p' comm_ind_wi_day3_second_ings.txt  // Print lines 9 to last

sed -n '$p' comm_ind_wi_day3_second_ings.txt  // Print only last line

sed -n '2,8p' comm_ind_wi_day3_second_ings.txt  // Print lines 2 to 8

sed -n '2,8p;9q' comm_ind_wi_day3_second_ings.txt  // Print lines 2 to 8 and quit on 9th
                                                    line

sed -n '5p' comm_ind_wi_day3_second_ings.txt  // Print 5th line

sed 's/I/We/2' msg.txt  // Replace 2nd occurence of 'I' with 'We'

sed -E 's/1/one/g; s/2/two/g; s/3/three/g' digit_word.txt  // Combine multiple
                                                        substitution statements of sed

sed -n '/[AEIOUaeiou]/!p' vowel_fav.txt  // Deletes lines which contain any vowel

sed '/[AEIOUaeiou]/d' vowel_fav.txt  // Deletes lines which contain any vowel

sed -n '/[aeiou]/I!p' vowel_fav.txt //Deletes lines which contain any vowel

sed -n 's/[AEIOUaeiou]/(&)/pg' vowel_fav.txt //put bracket around vowel and then print only that line which has vowel 

sed 's/ashwiN/Jadeja/Ig' comm_ind_wi_day3_second_ings.txt //I before g ignore capital or small case

gfg:
sed 's/unix/linux/3g' geekfile.txt //from 3rd occurence to end
$sed '3 s/unix/linux/' geekfile.txt //specific line number
sed '5d' filename.txt //delete 5th line
sed G a.txt //insert blank line
sed 'G;G' a.txt // insert two blank lines
 sed '/^$/d;G' a.txt // delete blank lines and insert one blank line after each line
sed '/love/{x;p;x;}' a.txt //insert blank line above line which matches love
sed 's/^/     /' a.txt // Insert 5 spaces to the left of every lines
sed =  a.txt | sed 'N;s/\n/\t/' //numbering each line
sed = a.txt | sed 'N; s/^/     /; s/ *\(.\{4,\}\)\n/\1  /' //number line left align
 sed '3~2d' a.txt //Delete lines starting from nth line and every 2nd  line from there
sed '/easy/,+2d' a.txt //Delete the lines which matches the pattern and 2 lines after to that
sed -n '/everyone/,5p' a.txt  //rint lines which matches the pattern i.e from input to xth line.
sed -n '/learn/,+2p' a.txt //â€“ Print the lines which matches the pattern up-to the next xth lines 
sed -i '5!s/life/love/' a.txt // except 5th line
